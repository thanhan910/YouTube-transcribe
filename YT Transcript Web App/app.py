from flask import Flask, request, render_template, jsonify
from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.formatters import TextFormatter


app = Flask(__name__)


def extract_video_id(url_or_id):
    if 'youtube.com' in url_or_id or 'youtu.be' in url_or_id:
        # Extract the video ID from the URL
        if 'v=' in url_or_id:
            return url_or_id.split('v=')[1].split('&')[0]
        elif 'youtu.be' in url_or_id:
            return url_or_id.split('/')[-1]
    return url_or_id


@app.route('/')
def index():
    return render_template('index.html')

@app.route('/api/languages', methods=['POST'])
def get_languages():
    data = request.json
    print(request.json)
    video_id = data['video_id']
    video_id = extract_video_id(video_id)
    try:
        transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)
        languages = [{"code": transcript.language_code, "name": transcript.language} for transcript in transcript_list]
        # for transcript in transcript_list:
        #     # the Transcript object provides metadata properties
        #     # ['fetch', 'is_generated', 'is_translatable', 'language', 'language_code', 'translate', 'translation_languages', 'video_id']
        #     print(
        #         transcript.video_id,
        #         transcript.language,
        #         transcript.language_code,
        #         # whether it has been manually created or generated by YouTube
        #         transcript.is_generated,
        #         # a list of languages the transcript can be translated to
        #         transcript.translation_languages,
        #     )

        #     # # fetch the actual transcript data
        #     # print(transcript.fetch())

        #     # # translating the transcript will return another transcript object
        #     # print(transcript.translate('vi').fetch())
        return jsonify(languages=languages)
    except Exception as e:
        return jsonify(error=str(e)), 400

@app.route('/api/transcript', methods=['POST'])
def get_transcript():
    data = request.json
    video_id = data['video_id']
    video_id = extract_video_id(video_id)
    language = data['language']
    try:
        transcript = YouTubeTranscriptApi.get_transcript(video_id, languages=[language])
        return jsonify(transcript=transcript)
    except Exception as e:
        return jsonify(error=str(e)), 400

if __name__ == '__main__':
    app.run(debug=True)
